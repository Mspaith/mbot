{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"CoderDojo Twin Cities MBot Microsite About the mBot The mBot is a $70.00 USD STEM coding robot for beginning programmers. It is programed by dragging and placing simple blocks, so even kids that don't know how to type can program the mBot. If you know Scratch programming you can quickly learn to programm the mBot. About this Website This web site contains basic lesson plans for teaching Computational Thinking to students in the age range of 5 to 12 years old. They key is that student don't need to know how to use a keyboard to use the mBot. Once students can use a keyboard they should advance to Beginning Python . The website is designed to contain modular lesson plans that teachers are free to use and customize for their classrooms without any license fees. All our content on the CoderDojo Twin Cities is covered under the Creative Commons Sharealike Noncommercial License Please Conaact me if you have any questions. We are always looking for volunteers to help us add lesson plans to this site. Dan McCreary, site maintainer","title":"CoderDojo Twin Cities MBot Microsite"},{"location":"#coderdojo-twin-cities-mbot-microsite","text":"","title":"CoderDojo Twin Cities MBot Microsite"},{"location":"#about-the-mbot","text":"The mBot is a $70.00 USD STEM coding robot for beginning programmers. It is programed by dragging and placing simple blocks, so even kids that don't know how to type can program the mBot. If you know Scratch programming you can quickly learn to programm the mBot.","title":"About the mBot"},{"location":"#about-this-website","text":"This web site contains basic lesson plans for teaching Computational Thinking to students in the age range of 5 to 12 years old. They key is that student don't need to know how to use a keyboard to use the mBot. Once students can use a keyboard they should advance to Beginning Python . The website is designed to contain modular lesson plans that teachers are free to use and customize for their classrooms without any license fees. All our content on the CoderDojo Twin Cities is covered under the Creative Commons Sharealike Noncommercial License Please Conaact me if you have any questions. We are always looking for volunteers to help us add lesson plans to this site. Dan McCreary, site maintainer","title":"About this Website"},{"location":"contact/","text":"Contacts for CoderDojoTC MBot Lessons Please send Dan McCreary a LinkedIn contact request: https://www.linkedin.com/in/danmccreary/","title":"Contact"},{"location":"contact/#contacts-for-coderdojotc-mbot-lessons","text":"Please send Dan McCreary a LinkedIn contact request: https://www.linkedin.com/in/danmccreary/","title":"Contacts for CoderDojoTC MBot Lessons"},{"location":"glossary/","text":"CoderDojo TwinCities MBot Glossary Arduino This is an older programming system built on \"C\". We no longer offer Arduino classes in our CoderDojo sessions since Python can run on our all our robots. Creative Commons License All the content in the CoderDojo Twin Cities courses is original content that is covered under a Creative Commons Sharealike NonCommercial license. This means that: Teachers can use this content in any of their classrooms without fees Teachers can modify the content for their courses Teachers can't resell our content for fees For details see CoderDojo Twin Cities Content Licensing MBot mBlock 5 mBlock 5 is a programming software designed for Science, Technology, Engineering, Arts and Mathematics (STEAM) education. Inspired by Scratch 3.0, it supports both graphical and textual programming languages. The \"m\" stands for \"Maker\" and \"Block\" is for block programming. mBlock 5 Reference Site MicroPython Ping Sensor Scratch","title":"Glossary"},{"location":"glossary/#coderdojo-twincities-mbot-glossary","text":"","title":"CoderDojo TwinCities MBot Glossary"},{"location":"glossary/#arduino","text":"This is an older programming system built on \"C\". We no longer offer Arduino classes in our CoderDojo sessions since Python can run on our all our robots.","title":"Arduino"},{"location":"glossary/#creative-commons-license","text":"All the content in the CoderDojo Twin Cities courses is original content that is covered under a Creative Commons Sharealike NonCommercial license. This means that: Teachers can use this content in any of their classrooms without fees Teachers can modify the content for their courses Teachers can't resell our content for fees For details see CoderDojo Twin Cities Content Licensing","title":"Creative Commons License"},{"location":"glossary/#mbot","text":"","title":"MBot"},{"location":"glossary/#mblock-5","text":"mBlock 5 is a programming software designed for Science, Technology, Engineering, Arts and Mathematics (STEAM) education. Inspired by Scratch 3.0, it supports both graphical and textual programming languages. The \"m\" stands for \"Maker\" and \"Block\" is for block programming. mBlock 5 Reference Site","title":"mBlock 5"},{"location":"glossary/#micropython","text":"","title":"MicroPython"},{"location":"glossary/#ping-sensor","text":"","title":"Ping Sensor"},{"location":"glossary/#scratch","text":"","title":"Scratch"},{"location":"references/","text":"CoderDojo Twin Cities MBot References MBlock Reference mBlock 5 Reference Site mBot2 resources Videos YouTube Video Tutorials on MBlock mBot vs mBot2 - a 10 minute video that shows the key differences between the current mBot we use in our classrooms and the new \"Neo\" mBot2 which will run MicroPython.","title":"References"},{"location":"references/#coderdojo-twin-cities-mbot-references","text":"","title":"CoderDojo Twin Cities MBot References"},{"location":"references/#mblock-reference","text":"mBlock 5 Reference Site mBot2 resources","title":"MBlock Reference"},{"location":"references/#videos","text":"YouTube Video Tutorials on MBlock mBot vs mBot2 - a 10 minute video that shows the key differences between the current mBot we use in our classrooms and the new \"Neo\" mBot2 which will run MicroPython.","title":"Videos"},{"location":"advanced/01-functions/","text":"Creating Your Own Functions with mBlock One of the key foundations of Computational Thinking is the idea of abstraction. Abstraction is where you take a much of complex code and create a wrapper that hides the complexity of the code. This makes it easier for other people to reuse your code blocks! Just like Scratch , mBlock allows us to create our own functions. We can give each function and name and then call it by that name anyhere in our code. We can also send our new function parameters so that it can customize the behavior based on what we put in a parameter. So for example we can create a function called \"turn and move\" and give it how many degrees to turn and how far to move forward. Sample Program TBD","title":"Functions"},{"location":"advanced/01-functions/#creating-your-own-functions-with-mblock","text":"One of the key foundations of Computational Thinking is the idea of abstraction. Abstraction is where you take a much of complex code and create a wrapper that hides the complexity of the code. This makes it easier for other people to reuse your code blocks! Just like Scratch , mBlock allows us to create our own functions. We can give each function and name and then call it by that name anyhere in our code. We can also send our new function parameters so that it can customize the behavior based on what we put in a parameter. So for example we can create a function called \"turn and move\" and give it how many degrees to turn and how far to move forward.","title":"Creating Your Own Functions with mBlock"},{"location":"advanced/01-functions/#sample-program","text":"TBD","title":"Sample Program"},{"location":"basics/01-set-led-color/","text":"Set LED Color Our first program will set the color of the LEDs on top of the mBot to red. Steps Make sure your dongle is plugged into the computer Start the mBlock program on the PC Click the \"Connect\" menu and check that you have a green dot on the mBlock area Sample program","title":"Set LED Color"},{"location":"basics/01-set-led-color/#set-led-color","text":"Our first program will set the color of the LEDs on top of the mBot to red.","title":"Set LED Color"},{"location":"basics/01-set-led-color/#steps","text":"Make sure your dongle is plugged into the computer Start the mBlock program on the PC Click the \"Connect\" menu and check that you have a green dot on the mBlock area","title":"Steps"},{"location":"basics/01-set-led-color/#sample-program","text":"","title":"Sample program"},{"location":"basics/02-blink/","text":"Blink LED Steps In the example below, the quotes are around the block name and the block parameters are in bold. Drag the \"When space Key Pressed\" block onto the screen. Drag the forever control onto the screen. Add the \"Set LED on board all red 255 \" in the forever block Drag the Wait 1 second block under that Add the \"Set LED on board all red 0 \" in the forever block Add a second wait 1 second block under that Sample Program Sample GIF Image Blink example on Mblock site https://www.mblock.cc/example/blink/","title":"Blink"},{"location":"basics/02-blink/#blink-led","text":"","title":"Blink LED"},{"location":"basics/02-blink/#steps","text":"In the example below, the quotes are around the block name and the block parameters are in bold. Drag the \"When space Key Pressed\" block onto the screen. Drag the forever control onto the screen. Add the \"Set LED on board all red 255 \" in the forever block Drag the Wait 1 second block under that Add the \"Set LED on board all red 0 \" in the forever block Add a second wait 1 second block under that","title":"Steps"},{"location":"basics/02-blink/#sample-program","text":"","title":"Sample Program"},{"location":"basics/02-blink/#sample-gif-image","text":"","title":"Sample GIF Image"},{"location":"basics/02-blink/#blink-example-on-mblock-site","text":"https://www.mblock.cc/example/blink/","title":"Blink example on Mblock site"},{"location":"basics/03-alternate-blink/","text":"Alternate Blink LED In this lab we will make both the LEDs on top of the robot blink red, then green, then blue. Each color will display for 1/2 second. Steps First, drag the \"When space Key Pressed\" block onto the screen. Next, drag the \"Forever\" block under that block. Next, \"Set LED on board all red 255 \" Under that add a \"Wait .5 second\" block Next, \"Set LED on board \"all\" green 255\" Under that add a \"Wait .5 second\" block Next, \"Set LED on board \"all\" blue 255\" Under that add a \"Wait .5 second\" block Now press the \"Space\" bar on the keyboard. The block should briefly flash with a yellow border so you know that the block event has been triggered. Sample Block Diagram Experiments Can you make the left and right lights alternate? What happens when you change the \"Set LED on board\" from \"All\" to be \"Right\" or \"Left\".","title":"Alternate Blink"},{"location":"basics/03-alternate-blink/#alternate-blink-led","text":"In this lab we will make both the LEDs on top of the robot blink red, then green, then blue. Each color will display for 1/2 second.","title":"Alternate Blink LED"},{"location":"basics/03-alternate-blink/#steps","text":"First, drag the \"When space Key Pressed\" block onto the screen. Next, drag the \"Forever\" block under that block. Next, \"Set LED on board all red 255 \" Under that add a \"Wait .5 second\" block Next, \"Set LED on board \"all\" green 255\" Under that add a \"Wait .5 second\" block Next, \"Set LED on board \"all\" blue 255\" Under that add a \"Wait .5 second\" block Now press the \"Space\" bar on the keyboard. The block should briefly flash with a yellow border so you know that the block event has been triggered.","title":"Steps"},{"location":"basics/03-alternate-blink/#sample-block-diagram","text":"","title":"Sample Block Diagram"},{"location":"basics/03-alternate-blink/#experiments","text":"Can you make the left and right lights alternate? What happens when you change the \"Set LED on board\" from \"All\" to be \"Right\" or \"Left\".","title":"Experiments"},{"location":"basics/04-ping-color/","text":"Conditional Ping","title":"Ping Color"},{"location":"basics/04-ping-color/#conditional-ping","text":"","title":"Conditional Ping"},{"location":"basics/04-random-color/","text":"Random Color In this lab, our goal is to create a program that generates random colors on the LEDs. https://www.mblock.cc/example/random-color/","title":"Random Color"},{"location":"basics/04-random-color/#random-color","text":"In this lab, our goal is to create a program that generates random colors on the LEDs. https://www.mblock.cc/example/random-color/","title":"Random Color"},{"location":"basics/05-green-to-go/","text":"Green Means Go This program will make both LEDs turn green if there is nothing in front of the ping sensor. To do this we will need to place the if then block inside of the forever block. The condition will be the if ultrasonic sensor less than 15. Sample Block Program Experiments Can you change the LEDs to be different colors? Can you change the left and right LED color separately?","title":"Green To Go"},{"location":"basics/05-green-to-go/#green-means-go","text":"This program will make both LEDs turn green if there is nothing in front of the ping sensor. To do this we will need to place the if then block inside of the forever block. The condition will be the if ultrasonic sensor less than 15.","title":"Green Means Go"},{"location":"basics/05-green-to-go/#sample-block-program","text":"","title":"Sample Block Program"},{"location":"basics/05-green-to-go/#experiments","text":"Can you change the LEDs to be different colors? Can you change the left and right LED color separately?","title":"Experiments"},{"location":"basics/06-rainbow-colors/","text":"Rainbow Colors","title":"Rainbow Color"},{"location":"basics/06-rainbow-colors/#rainbow-colors","text":"","title":"Rainbow Colors"},{"location":"basics/07-drive-square/","text":"Drive Square In this lab we want to make our robot drive in a square each time the letter \"g\" (for go) is pressed on the keyboard. To do this we will use a repeat 4 block since there are four sides in a square. For each side we will drive forward for 1 second and then turn right about .7 seconds. This will drive in the shape of a square. We can stop the robot by pressing the space bar. Sample Block Program mBlock links Drive Square Video","title":"Drive Square"},{"location":"basics/07-drive-square/#drive-square","text":"In this lab we want to make our robot drive in a square each time the letter \"g\" (for go) is pressed on the keyboard. To do this we will use a repeat 4 block since there are four sides in a square. For each side we will drive forward for 1 second and then turn right about .7 seconds. This will drive in the shape of a square. We can stop the robot by pressing the space bar.","title":"Drive Square"},{"location":"basics/07-drive-square/#sample-block-program","text":"","title":"Sample Block Program"},{"location":"basics/07-drive-square/#mblock-links","text":"Drive Square Video","title":"mBlock links"},{"location":"basics/08-collision-avoidance/","text":"Collision Avoidance In the world of teaching robotics, the equivalent of \"Hello World!\" is the collision avoidance program. The idea is to put your robot on the floor with a set of objects that it must drive around. The robot must be going forward if there are no objects in front of it. But if an object is in front of it, it will need to turn and drive in another direction. Demo Mode 2 (Green LED) Demo For our mBot, the collision avoidance algorithm can be turned by using Mode 2 where the top LED lights turn green after pressing the mode switch from the default white mode. But we want to be able to program our own collision avoidance mode. The algorithm Block Diagram mBot Links and Video mBlock example site Collision Avoidance Video on YouTube Jack Dahms Video: Obstacle Detection and Avoidance","title":"Collision Avoidance"},{"location":"basics/08-collision-avoidance/#collision-avoidance","text":"In the world of teaching robotics, the equivalent of \"Hello World!\" is the collision avoidance program. The idea is to put your robot on the floor with a set of objects that it must drive around. The robot must be going forward if there are no objects in front of it. But if an object is in front of it, it will need to turn and drive in another direction.","title":"Collision Avoidance"},{"location":"basics/08-collision-avoidance/#demo-mode-2-green-led-demo","text":"For our mBot, the collision avoidance algorithm can be turned by using Mode 2 where the top LED lights turn green after pressing the mode switch from the default white mode. But we want to be able to program our own collision avoidance mode.","title":"Demo Mode 2 (Green LED) Demo"},{"location":"basics/08-collision-avoidance/#the-algorithm","text":"","title":"The algorithm"},{"location":"basics/08-collision-avoidance/#block-diagram","text":"","title":"Block Diagram"},{"location":"basics/08-collision-avoidance/#mbot-links-and-video","text":"mBlock example site Collision Avoidance Video on YouTube Jack Dahms Video: Obstacle Detection and Avoidance","title":"mBot Links and Video"},{"location":"basics/08-dance/","text":"Dance The dance program will randomly rotate the robot an then drive forward or backwards a random distance.","title":"Dance"},{"location":"basics/08-dance/#dance","text":"The dance program will randomly rotate the robot an then drive forward or backwards a random distance.","title":"Dance"},{"location":"basics/09-collision-avoidance-random/","text":"Collision Avoidance When we get too close to an object we turn right to avoid it.","title":"Collision Avoidance Random"},{"location":"basics/09-collision-avoidance-random/#collision-avoidance","text":"When we get too close to an object we turn right to avoid it.","title":"Collision Avoidance"},{"location":"basics/10-collision-avoidance-reverse/","text":"Collision Avoidance Reverse Take the collision avoidance lab and when it senses and object in front of it, make it drive in reverse for a second before it randomly turns.","title":"Collision Avoidance Reverse"},{"location":"basics/10-collision-avoidance-reverse/#collision-avoidance-reverse","text":"Take the collision avoidance lab and when it senses and object in front of it, make it drive in reverse for a second before it randomly turns.","title":"Collision Avoidance Reverse"},{"location":"basics/10-line-follower/","text":"Line Follower This is the third demo program (blue LED lights). When you turn the mBot on, press the mode button twice. Then place the mBot on the figure 8 track. Sample Block Programs Change LED From Sensor Line Follower Full","title":"Line Follower"},{"location":"basics/10-line-follower/#line-follower","text":"This is the third demo program (blue LED lights). When you turn the mBot on, press the mode button twice. Then place the mBot on the figure 8 track.","title":"Line Follower"},{"location":"basics/10-line-follower/#sample-block-programs","text":"","title":"Sample Block Programs"},{"location":"basics/10-line-follower/#change-led-from-sensor","text":"","title":"Change LED From Sensor"},{"location":"basics/10-line-follower/#line-follower-full","text":"","title":"Line Follower Full"},{"location":"basics/11-collision-avoidance-led-status/","text":"Collision Avoidance LED Status Take the collision avoidance lab and when it senses and object in front of it, make it drive in reverse for a second before it randomly turns. Update the LED colors to show the state of the car: Green - driving forward with nothing in front of the robot. Red - Sense an object in front of the robot Yellow - Driving in reverse Purple - randomly turning","title":"Collision Avoidance LED Status"},{"location":"basics/11-collision-avoidance-led-status/#collision-avoidance-led-status","text":"Take the collision avoidance lab and when it senses and object in front of it, make it drive in reverse for a second before it randomly turns. Update the LED colors to show the state of the car: Green - driving forward with nothing in front of the robot. Red - Sense an object in front of the robot Yellow - Driving in reverse Purple - randomly turning","title":"Collision Avoidance LED Status"},{"location":"basics/12-cliff-detection/","text":"Cliff Detection In this lab, our goal is to create a program that keeps the robot from driving off the end of a table.","title":"Cliff Detection"},{"location":"basics/12-cliff-detection/#cliff-detection","text":"In this lab, our goal is to create a program that keeps the robot from driving off the end of a table.","title":"Cliff Detection"},{"location":"intro/01-intro/","text":"Introduction to mBot In these lessons plans we will learn some basic principals of computer science using the mBot robot. These lessons are ideal for students that have not mastered keyboarding skills but still would like to program their own robot. Order of Labs We start out with Desktop labs that don't use the motors. This is because motors drain the batteries and if the students are not careful the mBot will fall off the desks and break. It is only AFTER our students master the initial skills that we enable the motor labs which are done while the mBot is on the floor. We strongly discourage motor labs when the mBot is not on the floor. Desktop Labs Our first labs will verify that the mBot is hooked up correctly and that our students can change the color of the LED on top of the mBot. We then will introduce the repeat block to make the LEDs flash on and off or change colors. Next we will experiment with the ping sensor to measure the distance between the robot and an object in front of the robot. We will use this to change the LED colors, the blink rate or the color of the LEDs. After the students have mastered running programs, changing the LEDs and using the ping sensor we will move on to controlling the motors. Motor Labs (only done when the mBot is on the Floor) We have several simple labs we start out with. The first labs are a simple motion and turning labs. Once the students can make the robot go in a square, a circle or dance using random number generation we move on to integrating the ping sensor. The ping sensor is then used to turn the robot when an object is in front of the robot. We then make the robot reverse and turn in a random direction when it sees an object in front of the robot. mBot Video Tutorials YouTube Video Tutorials","title":"Getting Started"},{"location":"intro/01-intro/#introduction-to-mbot","text":"In these lessons plans we will learn some basic principals of computer science using the mBot robot. These lessons are ideal for students that have not mastered keyboarding skills but still would like to program their own robot.","title":"Introduction to mBot"},{"location":"intro/01-intro/#order-of-labs","text":"We start out with Desktop labs that don't use the motors. This is because motors drain the batteries and if the students are not careful the mBot will fall off the desks and break. It is only AFTER our students master the initial skills that we enable the motor labs which are done while the mBot is on the floor. We strongly discourage motor labs when the mBot is not on the floor.","title":"Order of Labs"},{"location":"intro/01-intro/#desktop-labs","text":"Our first labs will verify that the mBot is hooked up correctly and that our students can change the color of the LED on top of the mBot. We then will introduce the repeat block to make the LEDs flash on and off or change colors. Next we will experiment with the ping sensor to measure the distance between the robot and an object in front of the robot. We will use this to change the LED colors, the blink rate or the color of the LEDs. After the students have mastered running programs, changing the LEDs and using the ping sensor we will move on to controlling the motors.","title":"Desktop Labs"},{"location":"intro/01-intro/#motor-labs-only-done-when-the-mbot-is-on-the-floor","text":"We have several simple labs we start out with. The first labs are a simple motion and turning labs. Once the students can make the robot go in a square, a circle or dance using random number generation we move on to integrating the ping sensor. The ping sensor is then used to turn the robot when an object is in front of the robot. We then make the robot reverse and turn in a random direction when it sees an object in front of the robot.","title":"Motor Labs (only done when the mBot is on the Floor)"},{"location":"intro/01-intro/#mbot-video-tutorials","text":"YouTube Video Tutorials","title":"mBot Video Tutorials"},{"location":"intro/02-instructors-guide/","text":"","title":"Instructor's Guide"},{"location":"intro/03-concept-cards/","text":"CoderDojo Twin Cities mBot Concept Cards When our CoderDojo students enter our \"robots\" classroom they generally see three areas: Beginners - for first time students that have not used robots before Intermediate - for students that have done the mBot lessons and are ready to move on to the MicroPython robots Advanced - advanced students using the [AI Racing League Cars] Each of these areas have a set of colorful laminated cards that have three colors: 1 2 3 1. Beginning Green Cards - for first time students that have not done any lessons before 2. Intermediate Blue Cards - for intermediate students that have finished the green Labs 3. Advanced Black Cards - for students that have mastered all the intermediate concepts More about Concept Cards If you are interested in helping us design new concept cards, please go to our CoderDojo TC Mentor resources here: Link to Concept Cards","title":"Concept Cards"},{"location":"intro/03-concept-cards/#coderdojo-twin-cities-mbot-concept-cards","text":"When our CoderDojo students enter our \"robots\" classroom they generally see three areas: Beginners - for first time students that have not used robots before Intermediate - for students that have done the mBot lessons and are ready to move on to the MicroPython robots Advanced - advanced students using the [AI Racing League Cars] Each of these areas have a set of colorful laminated cards that have three colors: 1 2 3 1. Beginning Green Cards - for first time students that have not done any lessons before 2. Intermediate Blue Cards - for intermediate students that have finished the green Labs 3. Advanced Black Cards - for students that have mastered all the intermediate concepts","title":"CoderDojo Twin Cities mBot Concept Cards"},{"location":"intro/03-concept-cards/#more-about-concept-cards","text":"If you are interested in helping us design new concept cards, please go to our CoderDojo TC Mentor resources here: Link to Concept Cards","title":"More about Concept Cards"},{"location":"intro/04-mbot-vs-mbot2/","text":"mBot vs mBot2 In June of 2021 mBlock introduced the new mBot Neo, also known as the mBot2. This new robot had many new features, but also a higher price point. Since we can teach most of the principals of computational thinking using the mBot we don't think there is a real compelling reason to upgrade unless you also want to teach advanced MicroPython. Side By Side Comparison Feature Original mBot New mBot2 (Neo) Notes Original List Price $60 $130 to $169 Battery 4 AA Rechargeable Code Blocks and C Blocks, C and MicroPython Wireless Network None Yes Allows robot-to-robot communication Speech Recognition No Yes Machine Learning No Yes Inference on input signals Precise Movement No Yes Wheel movement feedback Remote Controller No Yes Distracts kids from learning computational thinking Display None 1.4\" color on remote Nice for menus and prompts Mbot2 Motors MBot2 uses two high speed DC motor encoders capable of up to 200RPM and stopping accuracy of \u00b10.05 degrees. At just 1500 gcm (1.5kg/cm), the DC motors produce twice as much torque as the original mBot, enabling quicker acceleration and pulling power to drive mBot2 with ease without any struggle. The motor components (stator and shaft) are built inside a metal housing. Being DC motor encoders, they use a closed-loop system design, which means you can precisely measure, monitor, and control the speed and acceleration of the motors across the RPM range from 1 RPM all the way to 200 RPM. The original mBot could not do this. Link to $72 mBot On Amazon Here is Link on Amazon You can also purchase a $165 with a Bluetooth Wireless Remote Controller: Link to Amazon Web Site","title":"mBot vs mBot2"},{"location":"intro/04-mbot-vs-mbot2/#mbot-vs-mbot2","text":"In June of 2021 mBlock introduced the new mBot Neo, also known as the mBot2. This new robot had many new features, but also a higher price point. Since we can teach most of the principals of computational thinking using the mBot we don't think there is a real compelling reason to upgrade unless you also want to teach advanced MicroPython.","title":"mBot vs mBot2"},{"location":"intro/04-mbot-vs-mbot2/#side-by-side-comparison","text":"Feature Original mBot New mBot2 (Neo) Notes Original List Price $60 $130 to $169 Battery 4 AA Rechargeable Code Blocks and C Blocks, C and MicroPython Wireless Network None Yes Allows robot-to-robot communication Speech Recognition No Yes Machine Learning No Yes Inference on input signals Precise Movement No Yes Wheel movement feedback Remote Controller No Yes Distracts kids from learning computational thinking Display None 1.4\" color on remote Nice for menus and prompts","title":"Side By Side Comparison"},{"location":"intro/04-mbot-vs-mbot2/#mbot2-motors","text":"MBot2 uses two high speed DC motor encoders capable of up to 200RPM and stopping accuracy of \u00b10.05 degrees. At just 1500 gcm (1.5kg/cm), the DC motors produce twice as much torque as the original mBot, enabling quicker acceleration and pulling power to drive mBot2 with ease without any struggle. The motor components (stator and shaft) are built inside a metal housing. Being DC motor encoders, they use a closed-loop system design, which means you can precisely measure, monitor, and control the speed and acceleration of the motors across the RPM range from 1 RPM all the way to 200 RPM. The original mBot could not do this. Link to $72 mBot On Amazon Here is Link on Amazon You can also purchase a $165 with a Bluetooth Wireless Remote Controller: Link to Amazon Web Site","title":"Mbot2 Motors"}]}